provider "aws" {
  region = "eu-central-1"
}

resource "aws_s3_bucket" "jans-website-logging-bucket" {
  bucket = "jans-website-logging-bucket"
  # If bucket is not empty it is not possible to destroy it
  # unless we force it like this
  force_destroy = true
  acl = "log-delivery-write"
}


resource "aws_s3_bucket" "main" {
  region = "eu-central-1"
  # here in the bucket name there was an issue when putting underscore
  bucket = "terraformjanswebsite"

  logging {
    target_bucket = aws_s3_bucket.jans-website-logging-bucket.bucket
    target_prefix = "www.jans_website"
  }

  website {
    index_document = "index.html"
    error_document = "index.html"
  }

  tags = {
    Name = "Bucket for TEState"
    Environment = "Dev"
  }
  # If bucket is not empty it is not possible to destroy it
  # unless we force it like this
  force_destroy = true
}

resource "aws_acm_certificate" "janscert" {

}

data "aws_availability_zone" "zones" {
  name = "eu-central-1a"
}

variable "content-types" {
  type = "map"

  default = {
    html = "text/html"
    js =   "application/javascript"
    css =  "text/css"
  }
}

resource "aws_s3_bucket_object" "jans-site-files" {
  for_each = fileset("${path.module}/website", "**")

  bucket = aws_s3_bucket.main.bucket
  key = each.value
  content_type = lookup(var.content-types, reverse(split(".", each.value))[0], "binary/octet-stream")
  source = "${path.module}/website/${each.value}"
  acl = "public-read"
}

output "website_url" {
  # autogenerated URL link to access my web site
  value = aws_s3_bucket.main.website_endpoint
}